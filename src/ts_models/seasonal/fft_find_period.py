# -*- coding:utf-8 -*-
# @Author  : 'longguangbin'
# @Contact : lgb453476610@163.com
# @Date    : 2019/1/28
"""  
Usage Of 'fft_find_period.py' : 
"""

import numpy as np


def fft_find_period(data):
    """Use fourier transform to find period.

    :param data: time series
    :return: period
    """
    fourier = np.fft.fft(data)  # 傅里叶变换
    modulus = np.abs(fourier)  # 振幅？自相关？
    max_ind = np.argmax(modulus[1:]) + 1
    n = len(data)
    timestep = 1  # 最小分辨率
    freq_ary = np.fft.fftfreq(n, timestep)  # 频率
    period = abs(np.round(1 / freq_ary[max_ind], 0))  # 周期=1/频率
    return period


def test():
    data = [476., 359., 288., 155., 205., 392., 340., 241., 246., 353., 83.,
            135., 415., 367., 296., 278., 197., 68., 56., 221., 222., 286.,
            251., 111., 74., 62., 334., 313., 227., 281., 164., 115., 106.,
            373., 376., 352., 485., 255., 102., 142., 432., 444., 540., 239.,
            208., 82., 97., 181., 379., 387., 376., 228., 125., 132., 355.,
            376., 350., 431., 225., 87., 108., 482., 230., 397., 312., 228.,
            141., 109., 415., 354., 568., 432., 255., 152., 134., 458., 277.,
            304., 295., 281., 89., 136., 568., 419., 365., 267., 270., 142.,
            69., 468., 293., 366., 314., 315., 116., 140., 491., 342., 553.,
            449., 306., 123., 150., 562., 409., 394., 315., 288., 105., 146.,
            482., 568., 472., 357., 367., 124., 215., 505., 563., 484., 395.,
            387., 211., 186., 567., 516., 568., 568., 393., 163., 155., 568.,
            568., 442., 562., 334., 147., 129., 533., 355., 495., 393., 211.,
            102., 210., 78., 459., 409., 568., 299., 419., 165., 102., 84.,
            97., 60., 112., 99., 133., 568., 568., 568., 568., 361., 285.,
            180., 568., 568., 568., 522., 368., 171., 205., 568., 568., 528.,
            558., 366., 116., 131., 568., 568., 560., 523., 302., 153., 192.,
            568., 568., 568., 478., 404., 195., 568., 551., 526., 524., 342.,
            291., 210., 224., 568., 568., 547., 406., 314., 151., 141., 568.,
            568., 452., 502., 279., 199., 197., 554., 568., 489., 537., 398.,
            194., 192., 566., 348., 141., 36., 52., 130., 149., 398., 376.,
            319., 325., 281., 128., 184., 325., 437., 553., 350., 484., 195.,
            154., 93., 148., 568., 358., 410., 141., 245.]

    fft_find_period(data)

    # from scipy import signal
    # f, Pxx_den = signal.periodogram(data)
    # np.sqrt(Pxx_den.max())


if __name__ == '__main__':
    test()
